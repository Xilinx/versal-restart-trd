#*****************************************************************************
#
# Copyright (C) 2019 - 2021 Xilinx, Inc.  All rights reserved.
# Copyright (C) 2022 Advanced Micro Devices, Inc. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
#******************************************************************************
#

# This file overlays the subsystem definition of the system.
#
# Following subsystems are adding using the pm_add_subsystem command:
#    - APU subsystem: 0x1c000003
#    - RPU lockstep subsystem: 0x1c000004
#
# The subsystem is constructed by adding specific requirement to it.
# pm_add_requirement command adds various devices/peripheral with associated
# requirement to the subsystem.
#
# This command can have variable number of argument depending on the type of
# device. Following is common command format used in this file.
#
# pm_add_requirement <subsystem-id> <device-id> <Access permissions> <master id mask> <prealloc access cap> <QoS>
# subsystem-id : use id as defined in pm_add_subsystem.
# device-id: can be obtained from xpm_nodeid.h file
# Access permission: This defines policy for access permissions
#                    bit [1:0] = Usage policy
#                    			 0 = No Restriction
#                    			 1 = Shared
#                    			 2 = Exclusive
#                    			 3 = Timeshared
#                    bit [2] = Security policy [0 = secure / 1 = non-secure]
#                    bit [3:5] = reserved
#                    bit [6] = Prealloc  [1 = prealloced]. Specify if the device should be prealloced before boot.
# master id mask : Used for protection. Currently default to 0xFFFFF
# prealloc cap   : defines state of the preallocation ( 0 -Access, 1- Context, 2-Wakeup, 3-Unusable)
# QoS            : used for timeout value of the healthy boot. Don't care for rest of the devices
#

version 2.0
# Not writing protection due to spec flag: enable_protection=false
#
marker 0x64 "Subsystem"
# 
#  -- Add All Subsystems --
#     add subsystem apu id 3
pm_add_subsystem 0x1c000003
#     add subsystem rpu_ls id 4
pm_add_subsystem 0x1c000004
# 
#  -- Add subsystem to subsystem permissions
#     subsystem apu to subsystem rpu_ls permissions
pm_add_requirement 0x1c000003 0x1c000004 0x7
#     subsystem rpu_ls to subsystem apu permissions
pm_add_requirement 0x1c000004 0x1c000003 0x7
# 
#  -- Start Subsystem apu Requirements --
#   Add CPU APU0 to subsystem apu
#   flags = _allow_secure (0x0) requested (0x40) !shared (0x2) = 0x42
#   prealloc = requested_full_access (0x1) = 0x1
pm_add_requirement 0x1c000003 0x1810c003 0x42 0 0x1 0x64
#   Add CPU APU1 to subsystem apu
#   flags = _allow_secure (0x0) requested (0x40) !shared (0x2) = 0x42
#   prealloc = requested_full_access (0x1) = 0x1
pm_add_requirement 0x1c000003 0x1810c004 0x42 0 0x1 0x64
#   Add device CANFD0 to subsystem apu, aperture 6 in LPD_XPPU
#   flags = !_allow_secure (0x4) !shared (0x2) = 0x6
pm_add_requirement 0x1c000003 0x1822401f 0x6 0 0 0x64
#   Add device CANFD1 to subsystem apu, aperture 7 in LPD_XPPU
#   flags = !_allow_secure (0x4) !shared (0x2) = 0x6
pm_add_requirement 0x1c000003 0x18224020 0x6 0 0 0x64
#   Add memory FPD_SWDT to subsystem apu
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000003 0x18224029 0x4 0 0 0x64
#   Add device GEM0 to subsystem apu, aperture 12 in LPD_XPPU
#   flags = !_allow_secure (0x4) requested (0x40) !shared (0x2) = 0x46
#   prealloc = requested_full_access (0x1) requested_preserve_context (0x2) requested_emit_wakeup (0x4) = 0x7
pm_add_requirement 0x1c000003 0x18224019 0x46 0 0x7 0x64
#   Add device GEM1 to subsystem apu, aperture 13 in LPD_XPPU
#   flags = !_allow_secure (0x4) requested (0x40) !shared (0x2) = 0x46
#   prealloc = requested_full_access (0x1) requested_preserve_context (0x2) requested_emit_wakeup (0x4) = 0x7
pm_add_requirement 0x1c000003 0x1822401a 0x46 0 0x7 0x64
#   Add virtual node GGS0 type ss_dev_rw to subsystem apu
#   flags = read (0x1) write (0x2) secure_read (0x10000) secure_write (0x20000) = 0x30003
pm_add_requirement 0x1c000003 0x18248000 0x30003
#   Add virtual node GGS1 type ss_dev_rw to subsystem apu
#   flags = read (0x1) write (0x2) secure_read (0x10000) secure_write (0x20000) = 0x30003
pm_add_requirement 0x1c000003 0x18248001 0x30003
#   Add virtual node GGS2 type ss_dev_rw to subsystem apu
#   flags = read (0x1) write (0x2) secure_read (0x10000) secure_write (0x20000) = 0x30003
pm_add_requirement 0x1c000003 0x18248002 0x30003
#   Add virtual node GGS3 type ss_dev_rw to subsystem apu
#   flags = read (0x1) write (0x2) secure_read (0x10000) secure_write (0x20000) = 0x30003
pm_add_requirement 0x1c000003 0x18248003 0x30003
#   Add device IPI0 to subsystem apu, aperture 51 in LPD_XPPU
#   flags = !_allow_secure (0x4) requested (0x40) !shared (0x2) = 0x46
#   prealloc = requested_full_access (0x1) = 0x1
pm_add_requirement 0x1c000003 0x1822403d 0x46 0 0x1 0x64
#   Add device LPD_DMA_CH0 to subsystem apu, aperture 168 in LPD_XPPU
#   flags = !_allow_secure (0x4) !shared (0x2) = 0x6
pm_add_requirement 0x1c000003 0x18224035 0x6 0 0 0x64
#   Add device LPD_DMA_CH1 to subsystem apu, aperture 169 in LPD_XPPU
#   flags = !_allow_secure (0x4) !shared (0x2) = 0x6
pm_add_requirement 0x1c000003 0x18224036 0x6 0 0 0x64
#   Add device LPD_DMA_CH2 to subsystem apu, aperture 170 in LPD_XPPU
#   flags = !_allow_secure (0x4) !shared (0x2) = 0x6
pm_add_requirement 0x1c000003 0x18224037 0x6 0 0 0x64
#   Add device LPD_DMA_CH3 to subsystem apu, aperture 171 in LPD_XPPU
#   flags = !_allow_secure (0x4) !shared (0x2) = 0x6
pm_add_requirement 0x1c000003 0x18224038 0x6 0 0 0x64
#   Add device LPD_DMA_CH4 to subsystem apu, aperture 172 in LPD_XPPU
#   flags = !_allow_secure (0x4) !shared (0x2) = 0x6
pm_add_requirement 0x1c000003 0x18224039 0x6 0 0 0x64
#   Add device LPD_DMA_CH5 to subsystem apu, aperture 173 in LPD_XPPU
#   flags = !_allow_secure (0x4) !shared (0x2) = 0x6
pm_add_requirement 0x1c000003 0x1822403a 0x6 0 0 0x64
#   Add device LPD_DMA_CH6 to subsystem apu, aperture 174 in LPD_XPPU
#   flags = !_allow_secure (0x4) !shared (0x2) = 0x6
pm_add_requirement 0x1c000003 0x1822403b 0x6 0 0 0x64
#   Add device LPD_DMA_CH7 to subsystem apu, aperture 175 in LPD_XPPU
#   flags = !_allow_secure (0x4) !shared (0x2) = 0x6
pm_add_requirement 0x1c000003 0x1822403c 0x6 0 0 0x64
#   Add device LPD_GPIO to subsystem apu, aperture 11 in LPD_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000003 0x18224023 0x4 0 0 0x64
#   Add device LPD_I2C0 to subsystem apu, aperture 2 in LPD_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000003 0x1822401d 0x4 0 0 0x64
#   Add device LPD_I2C1 to subsystem apu, aperture 3 in LPD_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000003 0x1822401e 0x4 0 0 0x64
#   Add memory OCM0_mem to subsystem apu
#   flags = !_allow_secure (0x4) requested (0x40) !shared (0x2) = 0x46
#   prealloc = requested_full_access (0x1) requested_preserve_context (0x2) = 0x3
pm_add_requirement 0x1c000003 0x18314007 0x46 0 0x3 0x64
#   Add memory OCM1_mem to subsystem apu
#   flags = !_allow_secure (0x4) requested (0x40) !shared (0x2) = 0x46
#   prealloc = requested_full_access (0x1) requested_preserve_context (0x2) = 0x3
pm_add_requirement 0x1c000003 0x18314008 0x46 0 0x3 0x64
#   Add memory OCM2_mem to subsystem apu
#   flags = !_allow_secure (0x4) requested (0x40) !shared (0x2) = 0x46
#   prealloc = requested_full_access (0x1) requested_preserve_context (0x2) = 0x3
pm_add_requirement 0x1c000003 0x18314009 0x46 0 0x3 0x64
#   Add memory OCM3_mem to subsystem apu
#   flags = !_allow_secure (0x4) requested (0x40) !shared (0x2) = 0x46
#   prealloc = requested_full_access (0x1) requested_preserve_context (0x2) = 0x3
pm_add_requirement 0x1c000003 0x1831400a 0x46 0 0x3 0x64
#   Add device OSPI to subsystem apu, aperture 1 in PMC_XPPU
#   flags = !_allow_secure (0x4) !shared (0x2) = 0x6
pm_add_requirement 0x1c000003 0x1822402a 0x6 0 0 0x64
#   Add virtual node PGGS0 type ss_dev_rw to subsystem apu
#   flags = read (0x1) write (0x2) secure_read (0x10000) secure_write (0x20000) = 0x30003
pm_add_requirement 0x1c000003 0x1824c004 0x30003
#   Add virtual node PGGS1 type ss_dev_rw to subsystem apu
#   flags = read (0x1) write (0x2) secure_read (0x10000) secure_write (0x20000) = 0x30003
pm_add_requirement 0x1c000003 0x1824c005 0x30003
#   Add virtual node PGGS2 type ss_dev_rw to subsystem apu
#   flags = read (0x1) write (0x2) secure_read (0x10000) secure_write (0x20000) = 0x30003
pm_add_requirement 0x1c000003 0x1824c006 0x30003
#   Add virtual node PGGS3 type ss_dev_rw to subsystem apu
#   flags = read (0x1) write (0x2) secure_read (0x10000) secure_write (0x20000) = 0x30003
pm_add_requirement 0x1c000003 0x1824c007 0x30003
#   Add device PMC_GPIO to subsystem apu, aperture 2 in PMC_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000003 0x1822402c 0x4 0 0 0x64
#   Add device PMC_I2C to subsystem apu, aperture 0 in PMC_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000003 0x1822402d 0x4 0 0 0x64
#   Add device PMC_RTC to subsystem apu, aperture 42 in PMC_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000003 0x18224034 0x4 0 0 0x64
#   Add device PMC_SYSMON_CSR to subsystem apu, aperture 39 in PMC_XPPU
#   flags = !_allow_secure (0x4) !shared (0x2) = 0x6
pm_add_requirement 0x1c000003 0x18224055 0x6 0 0 0x64
#   Add device QSPI to subsystem apu, aperture 3 in PMC_XPPU
#   flags = _allow_secure (0x0) requested (0x40) shared (0x0) = 0x40
#   prealloc = requested_secure (0x10) requested_full_access (0x1) = 0x11
pm_add_requirement 0x1c000003 0x1822402b 0x40 0 0x11 0x64
#   Add device RPU0_TCMA_mem to subsystem apu, aperture 224 in LPD_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000003 0x1831800b 0x4 0 0 0x64
#   Add device RPU0_TCMB_mem to subsystem apu, aperture 226 in LPD_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000003 0x1831800c 0x4 0 0 0x64
#   Add device RPU1_TCMA_mem_dual to subsystem apu, aperture 233 in LPD_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000003 0x1831800d 0x4 0 0 0x64
#   Add device RPU1_TCMB_mem_dual to subsystem apu, aperture 235 in LPD_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000003 0x1831800e 0x4 0 0 0x64
#   Add virtual node RST_PMC type reset to subsystem apu
#   flags = write (0x1) secure_write (0x10000) = 0x10001
pm_add_requirement 0x1c000003 0xc410002 0x10001
#   Add device SD_eMMC0 to subsystem apu, aperture 4 in PMC_XPPU
#   flags = _allow_secure (0x0) requested (0x40) shared (0x0) = 0x40
#   prealloc = requested_secure (0x10) requested_full_access (0x1) = 0x11
pm_add_requirement 0x1c000003 0x1822402e 0x40 0 0x11 0x64
#   Add device SD_eMMC1 to subsystem apu, aperture 5 in PMC_XPPU
#   flags = _allow_secure (0x0) requested (0x40) shared (0x0) = 0x40
#   prealloc = requested_secure (0x10) requested_full_access (0x1) = 0x11
pm_add_requirement 0x1c000003 0x1822402f 0x40 0 0x11 0x64
#   Add device SPI0 to subsystem apu, aperture 4 in LPD_XPPU
#   flags = !_allow_secure (0x4) !shared (0x2) = 0x6
pm_add_requirement 0x1c000003 0x1822401b 0x6 0 0 0x64
#   Add device SPI1 to subsystem apu, aperture 5 in LPD_XPPU
#   flags = !_allow_secure (0x4) !shared (0x2) = 0x6
pm_add_requirement 0x1c000003 0x1822401c 0x6 0 0 0x64
#   Add device TTC0 to subsystem apu, aperture 14 in LPD_XPPU
#   flags = !_allow_secure (0x4) requested (0x40) shared (0x0) = 0x44
#   prealloc = requested_full_access (0x1) = 0x1
pm_add_requirement 0x1c000003 0x18224024 0x44 0 0x1 0x64
#   Add device TTC1 to subsystem apu, aperture 15 in LPD_XPPU
#   flags = !_allow_secure (0x4) requested (0x40) shared (0x0) = 0x44
#   prealloc = requested_full_access (0x1) = 0x1
pm_add_requirement 0x1c000003 0x18224025 0x44 0 0x1 0x64
#   Add device TTC2 to subsystem apu, aperture 16 in LPD_XPPU
#   flags = !_allow_secure (0x4) requested (0x40) shared (0x0) = 0x44
#   prealloc = requested_full_access (0x1) = 0x1
pm_add_requirement 0x1c000003 0x18224026 0x44 0 0x1 0x64
#   Add device TTC3 to subsystem apu, aperture 17 in LPD_XPPU
#   flags = !_allow_secure (0x4) requested (0x40) shared (0x0) = 0x44
#   prealloc = requested_full_access (0x1) = 0x1
pm_add_requirement 0x1c000003 0x18224027 0x44 0 0x1 0x64
#   Add device UART0 to subsystem apu, aperture 0 in LPD_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000003 0x18224021 0x4 0 0 0x64
#   Add device UART1 to subsystem apu, aperture 1 in LPD_XPPU
#   flags = !_allow_secure (0x4) timeshare (0x3) shared (0x0) = 0x7
pm_add_requirement 0x1c000003 0x18224022 0x7 0 0 0x64
#   Add device USB2_CSR to subsystem apu, aperture 157 in LPD_XPPU
#   flags = !_allow_secure (0x4) !shared (0x2) = 0x6
pm_add_requirement 0x1c000003 0x18224018 0x6 0 0 0x64
# Healthy Boot configuration for APU subsystem
#Add HB_MON_0 to APU subsystem. Timeout(last argument) = 120000ms (0x1D4C0)
pm_add_requirement 0x1c000003 0x18250000 0x46 0x0 0x1 0x1D4C0
#Set the error action (SRST) for HB_MON_0 in case of subsystem not healthy
#Second Argument = error action; POR=0x1; SRST=0x2; ERR_OUT=0x4;
em_set_action 0x28110000 0x2 0x1
# subsystem_apu dev_swdt_fpd
pm_add_requirement 0x1c000003 0x18224029 0x7 0x0 0x0 0x64
# subsystem_apu dev_l2_bank_0
pm_add_requirement 0x1c000003 0x1831c00f 0x4 0x0 0x0 0x64
# subsystem_apu dev_ddr_0
pm_add_requirement 0x1c000003 0x18320010 0x7 0x0 0x0 0x64
#  -- End Subsystem apu Requirements --
# 
#  -- Start Subsystem rpu_ls Requirements --
#   Add CPU RPU0 to subsystem rpu_ls
#   flags = _allow_secure (0x0) requested (0x40) !shared (0x2) = 0x42
#   prealloc = requested_secure (0x10) requested_full_access (0x1) = 0x11
pm_add_requirement 0x1c000004 0x18110005 0x42 0 0x11 0x64
#   Add CPU RPU1 to subsystem rpu_ls
#   flags = _allow_secure (0x0) requested (0x40) !shared (0x2) = 0x42
#   prealloc = requested_secure (0x10) requested_full_access (0x1) = 0x11
pm_add_requirement 0x1c000004 0x18110006 0x42 0 0x11 0x64
#   Add memory FPD_SWDT to subsystem rpu_ls
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000004 0x18224029 0x4 0 0 0x64
#   Add virtual node GGS0 type ss_dev_rw to subsystem rpu_ls
#   flags = read (0x1) write (0x2) secure_read (0x10000) secure_write (0x20000) = 0x30003
pm_add_requirement 0x1c000004 0x18248000 0x30003
#   Add virtual node GGS1 type ss_dev_rw to subsystem rpu_ls
#   flags = read (0x1) write (0x2) secure_read (0x10000) secure_write (0x20000) = 0x30003
pm_add_requirement 0x1c000004 0x18248001 0x30003
#   Add virtual node GGS2 type ss_dev_rw to subsystem rpu_ls
#   flags = read (0x1) write (0x2) secure_read (0x10000) secure_write (0x20000) = 0x30003
pm_add_requirement 0x1c000004 0x18248002 0x30003
#   Add virtual node GGS3 type ss_dev_rw to subsystem rpu_ls
#   flags = read (0x1) write (0x2) secure_read (0x10000) secure_write (0x20000) = 0x30003
pm_add_requirement 0x1c000004 0x18248003 0x30003
#   Add device IPI1 to subsystem rpu_ls, aperture 52 in LPD_XPPU
#   flags = !_allow_secure (0x4) requested (0x40) !shared (0x2) = 0x46
#   prealloc = requested_full_access (0x1) = 0x1
pm_add_requirement 0x1c000004 0x1822403e 0x46 0 0x1 0x64
#   Add device LPD_GPIO to subsystem rpu_ls, aperture 11 in LPD_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000004 0x18224023 0x4 0 0 0x64
#   Add device LPD_I2C0 to subsystem rpu_ls, aperture 2 in LPD_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000004 0x1822401d 0x4 0 0 0x64
#   Add device LPD_I2C1 to subsystem rpu_ls, aperture 3 in LPD_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000004 0x1822401e 0x4 0 0 0x64
#   Add virtual node PGGS0 type ss_dev_rw to subsystem rpu_ls
#   flags = read (0x1) write (0x2) secure_read (0x10000) secure_write (0x20000) = 0x30003
pm_add_requirement 0x1c000004 0x1824c004 0x30003
#   Add virtual node PGGS1 type ss_dev_rw to subsystem rpu_ls
#   flags = read (0x1) write (0x2) secure_read (0x10000) secure_write (0x20000) = 0x30003
pm_add_requirement 0x1c000004 0x1824c005 0x30003
#   Add virtual node PGGS2 type ss_dev_rw to subsystem rpu_ls
#   flags = read (0x1) write (0x2) secure_read (0x10000) secure_write (0x20000) = 0x30003
pm_add_requirement 0x1c000004 0x1824c006 0x30003
#   Add virtual node PGGS3 type ss_dev_rw to subsystem rpu_ls
#   flags = read (0x1) write (0x2) secure_read (0x10000) secure_write (0x20000) = 0x30003
pm_add_requirement 0x1c000004 0x1824c007 0x30003
#   Add device PMC_GPIO to subsystem rpu_ls, aperture 2 in PMC_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000004 0x1822402c 0x4 0 0 0x64
#   Add device PMC_I2C to subsystem rpu_ls, aperture 0 in PMC_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000004 0x1822402d 0x4 0 0 0x64
#   Add device PMC_RTC to subsystem rpu_ls, aperture 42 in PMC_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000004 0x18224034 0x4 0 0 0x64
#   Add device QSPI to subsystem rpu_ls, aperture 3 in PMC_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000004 0x1822402b 0x4 0 0 0x64
#   Add device RPU0_TCMA_mem to subsystem rpu_ls, aperture 224 in LPD_XPPU
#   flags = !_allow_secure (0x4) requested (0x40) shared (0x0) = 0x44
#   prealloc = requested_full_access (0x1) requested_preserve_context (0x2) = 0x3
pm_add_requirement 0x1c000004 0x1831800b 0x44 0 0x3 0x64
#   Add device RPU0_TCMB_mem to subsystem rpu_ls, aperture 226 in LPD_XPPU
#   flags = !_allow_secure (0x4) requested (0x40) shared (0x0) = 0x44
#   prealloc = requested_full_access (0x1) requested_preserve_context (0x2) = 0x3
pm_add_requirement 0x1c000004 0x1831800c 0x44 0 0x3 0x64
#   Add device RPU1_TCMA_mem_dual to subsystem rpu_ls, aperture 233 in LPD_XPPU
#   flags = !_allow_secure (0x4) requested (0x40) shared (0x0) = 0x44
#   prealloc = requested_full_access (0x1) requested_preserve_context (0x2) = 0x3
pm_add_requirement 0x1c000004 0x1831800d 0x44 0 0x3 0x64
#   Add device RPU1_TCMB_mem_dual to subsystem rpu_ls, aperture 235 in LPD_XPPU
#   flags = !_allow_secure (0x4) requested (0x40) shared (0x0) = 0x44
#   prealloc = requested_full_access (0x1) requested_preserve_context (0x2) = 0x3
pm_add_requirement 0x1c000004 0x1831800e 0x44 0 0x3 0x64
#   Add virtual node RST_PMC type reset to subsystem rpu_ls
#   flags = write (0x1) secure_write (0x10000) = 0x10001
pm_add_requirement 0x1c000004 0xc410002 0x10001
#   Add device SD_eMMC0 to subsystem rpu_ls, aperture 4 in PMC_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000004 0x1822402e 0x4 0 0 0x64
#   Add device SD_eMMC1 to subsystem rpu_ls, aperture 5 in PMC_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000004 0x1822402f 0x4 0 0 0x64
#   Add device TTC0 to subsystem rpu_ls, aperture 14 in LPD_XPPU
#   flags = !_allow_secure (0x4) requested (0x40) shared (0x0) = 0x44
#   prealloc = requested_full_access (0x1) = 0x1
pm_add_requirement 0x1c000004 0x18224024 0x44 0 0x1 0x64
#   Add device TTC1 to subsystem rpu_ls, aperture 15 in LPD_XPPU
#   flags = !_allow_secure (0x4) requested (0x40) shared (0x0) = 0x44
#   prealloc = requested_full_access (0x1) = 0x1
pm_add_requirement 0x1c000004 0x18224025 0x44 0 0x1 0x64
#   Add device TTC2 to subsystem rpu_ls, aperture 16 in LPD_XPPU
#   flags = !_allow_secure (0x4) requested (0x40) shared (0x0) = 0x44
#   prealloc = requested_full_access (0x1) = 0x1
pm_add_requirement 0x1c000004 0x18224026 0x44 0 0x1 0x64
#   Add device TTC3 to subsystem rpu_ls, aperture 17 in LPD_XPPU
#   flags = !_allow_secure (0x4) requested (0x40) shared (0x0) = 0x44
#   prealloc = requested_full_access (0x1) = 0x1
pm_add_requirement 0x1c000004 0x18224027 0x44 0 0x1 0x64
#   Add device UART0 to subsystem rpu_ls, aperture 0 in LPD_XPPU
#   flags = !_allow_secure (0x4) shared (0x0) = 0x4
pm_add_requirement 0x1c000004 0x18224021 0x4 0 0 0x64
#   Add device UART1 to subsystem rpu_ls, aperture 1 in LPD_XPPU
#   flags = !_allow_secure (0x4) timeshare (0x3) requested (0x40) shared (0x0) = 0x47
#   prealloc = requested_full_access (0x1) requested_preserve_context (0x2) requested_emit_wakeup (0x4) = 0x7
pm_add_requirement 0x1c000004 0x18224022 0x47 0 0x7 0x64
# subsystem_rpu_ls dev_swdt_lpd
pm_add_requirement 0x1c000004 0x18224028 0x7 0x0 0x0 0x64
# Healthy Boot configuration for RPU subsystem
#Add HB_MON_1 to RPU_LS subsystem. Timeout(last argument) = 20000ms (0x4E20)
pm_add_requirement 0x1c000004 0x18250001 0x46 0x0 0x1 0x4E20
#Set the error action (POR) for HB_MON_1 in case of subsystem not healthy
#Second Argument = error action; POR=0x1; SRST=0x2; ERR_OUT=0x4;
em_set_action 0x28110000 0x1 0x2
#  -- End Subsystem rpu_ls Requirements --
marker 0x65 "Subsystem"
# 
# IPI is not enabled due to the isolation spec flag write_ipi=false
